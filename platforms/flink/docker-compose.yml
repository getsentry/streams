version: '3.5'

x-flink-config: &flink-config |
  state.backend: filesystem
  state.checkpoints.dir: file:///tmp/flink-checkpoints
  heartbeat.interval: 1000
  heartbeat.timeout: 5000
  rest.flamegraph.enabled: true
  web.backpressure.refresh-interval: 10000
  jobmanager.memory.process.size: 1024m
  jobmanager.rpc.address: jobmanager
  taskmanager.memory.process.size: 1024m
  taskmanager.numberOfTaskSlots: 2
  python.executable: /usr/bin/python3.11
  python.files: /apps

# TODO: port this to devservices
services:
  broker:
    image: confluentinc/cp-kafka:7.4.1
    hostname: kafka
    container_name: kafka
    ports:
      - 9092:9092
      - 9999:9999
      - 9093:9093
    volumes:
      - kafka_data:/var/lib/kafka/data
    environment:
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@127.0.0.1:29093
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_NODE_ID: 1
      CLUSTER_ID: MkU3OEVBNTcwNTJENDM2Qk
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092,INTERNAL://0.0.0.0:9093,EXTERNAL://0.0.0.0:9092,CONTROLLER://0.0.0.0:29093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://127.0.0.1:29092,INTERNAL://kafka:9093,EXTERNAL://127.0.0.1:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_OFFSETS_TOPIC_NUM_PARTITIONS: 1
      KAFKA_LOG_RETENTION_HOURS: 24
    networks:
      - flink
  jobmanager:
    image: localimage/sentry-flink:latest
    hostname: jobmanager
    container_name: jobmanager
    build:
      context: ../../
      dockerfile: ./platforms/flink/Dockerfile
    networks:
      - flink
    volumes:
      - flink_data:/tmp/
      - type: bind
        source: ../../py
        target: /apps
    ports:
      - "8081:8081"
    environment:
      FLINK_PROPERTIES: *flink-config
    command: jobmanager

  taskmanager:
    image: localimage/sentry-flink:latest
    build:
      context: ../../
      dockerfile: ./platforms/flink/Dockerfile
    networks:
      - flink
    volumes:
      - flink_data:/tmp/
      - type: bind
        source: ../../py
        target: /apps
    environment:
      FLINK_PROPERTIES: *flink-config
    command: taskmanager
    depends_on:
      - jobmanager

networks:
  flink:

volumes:
  flink_data:
    driver: local
    name: flink_data
  kafka_data:
    driver: local
    name: kafka_data
